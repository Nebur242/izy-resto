name: Sync Fork

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight
  workflow_dispatch: # Allows manual triggering

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the forked repository
      - name: Checkout fork
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history and tags
          token: ${{ secrets.ACCOUNT_TOKEN }}

      # Step 2: Configure Git
      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Step 3: Add upstream remote
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/Nebur2020/izy-resto.git
          git fetch upstream

      # Step 4: Merge upstream changes into the main branch
      - name: Merge changes
        run: |
          git checkout main
          git merge upstream/main --allow-unrelated-histories || true

      # Step 5: Push changes back to the forked repository
      - name: Push changes
        run: |
          git push origin main

      # Step 6: Sync tags from upstream
      - name: Fetch and push tags
        env:
          GITHUB_TOKEN: ${{ secrets.ACCOUNT_TOKEN }}
        run: |
          git fetch upstream --tags -f
          git push origin --tags

      # Step 7: Create release from latest tag
      - name: Get latest tag and create release
        env:
          GITHUB_TOKEN: ${{ secrets.ACCOUNT_TOKEN }}
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          if [ ! -z "$LATEST_TAG" ]; then
            # Check if release exists for latest tag
            if ! gh release view "$LATEST_TAG" &>/dev/null; then
              # Create release for latest tag
              gh release create "$LATEST_TAG" \
                --title "Release $LATEST_TAG" \
                --notes "Automatically synced from upstream." \
                --target main
            fi
          fi
